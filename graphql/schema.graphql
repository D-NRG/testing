"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    users: [User!] @paginate(defaultCount: 10)
    user(id:ID @eq): User @find
    products: [Product!]! @field(resolver: "App\\GraphQL\\Queries\\ProductResolver")
    sizes: [Size!]! @field(resolver: "App\\GraphQL\\Queries\\SizeResolver")
    colors: [Color!]! @field(resolver: "App\\GraphQL\\Queries\\ColorResolver")
    manufactures: [Manufacture!]! @field(resolver: "App\\GraphQL\\Queries\\ManufactureResolver")
    categoriess: [Categories!]! @field(resolver: "App\\GraphQL\\Queries\\CategoriesResolver")
    attrs: [Attr!]! @field(resolver: "App\\GraphQL\\Queries\\AttrResolver")
    product(id:ID): Product @field(resolver: "App\\GraphQL\\Queries\\ProductResolver@show")
    size(id:ID): Size @field(resolver: "App\\GraphQL\\Queries\\SizeResolver@show")
    color(id:ID): Color @field(resolver: "App\\GraphQL\\Queries\\ColorResolver@show")
    manufacture(id:ID): Manufacture @field(resolver: "App\\GraphQL\\Queries\\ManufactureResolver@show")
    categories(id:ID): Categories @field(resolver: "App\\GraphQL\\Queries\\CategoriesResolver@show")
    attr(id:ID): Attr @field(resolver: "App\\GraphQL\\Queries\\AttrResolver@show")

}
type Mutation {
    createColor(
        name:String! @rules(apply: ["required"])
    ): Color @field(resolver: "App\\GraphQL\\Queries\\ColorResolver@create")
    createSize(
        name:String! @rules(apply: ["required"])
    ): Size @field(resolver: "App\\GraphQL\\Queries\\SizeResolver@create")
    createManufacture(
        name:String! @rules(apply: ["required"])
    ): Manufacture @field(resolver: "App\\GraphQL\\Queries\\ManufactureResolver@create")
    createCategories(
        name:String! @rules(apply: ["required"])
    ): Categories @field(resolver: "App\\GraphQL\\Queries\\CategoriesResolver@create")
    createProduct(
        name:String! @rules(apply: ["required"])
    ): Product @field(resolver: "App\\GraphQL\\Queries\\ProductResolver@create")
    createAttr(
        color_id:Int! @rules(apply: ["required"])
        size_id:Int! @rules(apply: ["required"])
        manufacture_id:Int! @rules(apply: ["required"])
        categories_id:Int! @rules(apply: ["required"])
        product_id:Int! @rules(apply: ["required"])
    ): Attr @field(resolver: "App\\GraphQL\\Queries\\AttrResolver@create")
    updateColor(
        id:ID!
        name: String! @rules(apply: ["required"])
    ): Color @field(resolver: "App\\GraphQL\\Queries\\ColorResolver@update")
    updateSize(
        id:ID!
        name: String! @rules(apply: ["required"])
    ): Size @field(resolver: "App\\GraphQL\\Queries\\SizeResolver@update")
    updateManufacture(
        id:ID!
        name: String! @rules(apply: ["required"])
    ): Manufacture @field(resolver: "App\\GraphQL\\Queries\\ManufactureResolver@update")
    updateCategories(
        id:ID!
        name: String! @rules(apply: ["required"])
    ): Categories @field(resolver: "App\\GraphQL\\Queries\\CategoriesResolver@update")
    updateProduct(
        id:ID!
        name: String! @rules(apply: ["required"])
    ): Product @field(resolver: "App\\GraphQL\\Queries\\ProductResolver@update")
    updateAttr(
        id:ID!
        attr_id:Int!
        column:String!
    ): Attr @field(resolver: "App\\GraphQL\\Queries\\AttrResolver@update")
#    updateAttrSize(
#        id:ID!
#        size_id:Int! @rules(apply: ["required"])
#    ): Attr @update
#    updateAttrManufacture(
#        id:ID!
#        manufacture_id:Int! @rules(apply: ["required"])
#    ): Attr @update
#    updateAttrCategories(
#        id:ID!
#        categories_id:Int! @rules(apply: ["required"])
#    ): Attr @update
#    updateAttrProduct(
#        id:ID!
#        product_id:Int! @rules(apply: ["required"])
#    ): Attr @update
    deleteColor(
        id:ID! @eq
    ): Color @delete
    deleteSize(
        id:ID! @eq
    ): Size @delete
    deleteManufacture(
        id:ID! @eq
    ): Manufacture @delete
    deleteCategories(
        id:ID! @eq
    ): Categories @delete
    deleteProduct(
        id:ID! @eq
    ): Product @delete
    deleteAttr(
        id:ID! @eq
    ): Attr @delete
}

"Account of a person who utilizes this application."

type User {
    id: ID!
    name: String!
    email: String!
    email_verifield_at: DateTime!
    password: String!
#    remember_token: String!
    created_at: DateTime!
    updated_at: DateTime!
}
type Color {
    id: ID!
    name: String!
    attrs: [Attr!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}
type Size {
    id: ID!
    name: String!
    attrs: [Attr!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}
type Manufacture {
    id: ID!
    name: String!
    attrs: [Attr!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}
type Categories {
    id: ID!
    name: String!
    attrs: [Attr!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}
type Product {
    id: ID!
    name: String!
    attrs: [Attr!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}
type Attr {
    id: ID!
    color: Color! @belongsTo
    size: Size! @belongsTo
    manufacture: Manufacture! @belongsTo
    categories: Categories! @belongsTo
    product: Product! @belongsTo
    created_at: DateTime! @belongsTo
    updated_at: DateTime! @belongsTo
}
